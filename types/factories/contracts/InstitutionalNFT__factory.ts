/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  InstitutionalNFT,
  InstitutionalNFTInterface,
} from "../../contracts/InstitutionalNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "SoulboundTokenTransfer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "SoulboundTokenMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isSoulbound",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "institution",
        type: "address",
      },
    ],
    name: "mintInstitutionalNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "updateBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017e0380380620017e08339810160408190526200003491620001c4565b3383836000620000458382620002e6565b506001620000548282620002e6565b5050506001600160a01b0381166200008657604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200009181620000aa565b506008620000a08282620002e6565b50505050620003b2565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200012457600080fd5b81516001600160401b0380821115620001415762000141620000fc565b604051601f8301601f19908116603f011681019082821181831017156200016c576200016c620000fc565b81604052838152602092508660208588010111156200018a57600080fd5b600091505b83821015620001ae57858201830151818301840152908201906200018f565b6000602085830101528094505050505092915050565b600080600060608486031215620001da57600080fd5b83516001600160401b0380821115620001f257600080fd5b620002008783880162000112565b945060208601519150808211156200021757600080fd5b620002258783880162000112565b935060408601519150808211156200023c57600080fd5b506200024b8682870162000112565b9150509250925092565b600181811c908216806200026a57607f821691505b6020821081036200028b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002e1576000816000526020600020601f850160051c81016020861015620002bc5750805b601f850160051c820191505b81811015620002dd57828155600101620002c8565b5050505b505050565b81516001600160401b03811115620003025762000302620000fc565b6200031a8162000313845462000255565b8462000291565b602080601f831160018114620003525760008415620003395750858301515b600019600386901b1c1916600185901b178555620002dd565b600085815260208120601f198616915b82811015620003835788860151825594840194600190910190840162000362565b5085821015620003a25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61141e80620003c26000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063b88d4fde11610071578063b88d4fde14610267578063c059948b1461027a578063c87b56dd1461028d578063e985e9c5146102a0578063f2fde38b146102b357600080fd5b80638da5cb5b14610205578063911ec47014610216578063931688cb1461023957806395d89b411461024c578063a22cb4651461025457600080fd5b806323b872dd116100f457806323b872dd146101a357806342842e0e146101b65780636352211e146101c957806370a08231146101dc578063715018a6146101fd57600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b610139610134366004610ee5565b6102c6565b60405190151581526020015b60405180910390f35b610156610318565b6040516101459190610f52565b610176610171366004610f65565b6103aa565b6040516001600160a01b039091168152602001610145565b6101a161019c366004610f9a565b6103d3565b005b6101a16101b1366004610fc4565b610411565b6101a16101c4366004610fc4565b6104a1565b6101766101d7366004610f65565b6104c1565b6101ef6101ea366004611000565b6104cc565b604051908152602001610145565b6101a1610514565b6006546001600160a01b0316610176565b610139610224366004610f65565b60009081526009602052604090205460ff1690565b6101a16102473660046110a7565b610528565b61015661053c565b6101a16102623660046110f0565b61054b565b6101a161027536600461112c565b610585565b6101a1610288366004611000565b61059d565b61015661029b366004610f65565b610628565b6101396102ae3660046111a8565b610690565b6101a16102c1366004611000565b6106be565b60006001600160e01b031982166380ac58cd60e01b14806102f757506001600160e01b03198216635b5e139f60e01b145b8061031257506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610327906111db565b80601f0160208091040260200160405190810160405280929190818152602001828054610353906111db565b80156103a05780601f10610375576101008083540402835291602001916103a0565b820191906000526020600020905b81548152906001019060200180831161038357829003601f168201915b5050505050905090565b60006103b5826106fc565b506000828152600460205260409020546001600160a01b0316610312565b60008181526009602052604090205460ff161561040357604051631882642b60e21b815260040160405180910390fd5b61040d8282610735565b5050565b6001600160a01b03821661044057604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061044d838333610740565b9050836001600160a01b0316816001600160a01b03161461049b576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610437565b50505050565b6104bc83838360405180602001604052806000815250610585565b505050565b6000610312826106fc565b60006001600160a01b0382166104f8576040516322718ad960e21b815260006004820152602401610437565b506001600160a01b031660009081526003602052604090205490565b61051c610797565b61052660006107c4565b565b610530610797565b600861040d828261125d565b606060018054610327906111db565b61055d60016007546102249190611333565b1561057b57604051631882642b60e21b815260040160405180910390fd5b61040d8282610816565b610590848484610411565b61049b3385858585610821565b6105a5610797565b60078054600091826105b683611346565b9190505590506105c6828261094c565b60008181526009602052604090819020805460ff19166001179055516001600160a01b038316907f69578e4d7becfd7d2e3306dde750cd20e655b9b01f0eff48039271b19b636df69061061c9084815260200190565b60405180910390a25050565b6060610633826106fc565b50600061063e610966565b9050600081511161065e5760405180602001604052806000815250610689565b8061066884610975565b60405160200161067992919061135f565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6106c6610797565b6001600160a01b0381166106f057604051631e4fbdf760e01b815260006004820152602401610437565b6106f9816107c4565b50565b6000818152600260205260408120546001600160a01b03168061031257604051637e27328960e01b815260048101849052602401610437565b61040d828233610a08565b60008281526009602052604081205460ff16801561076657506001600160a01b03821615155b1561078457604051631882642b60e21b815260040160405180910390fd5b61078f848484610a15565b949350505050565b6006546001600160a01b031633146105265760405163118cdaa760e01b8152336004820152602401610437565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61040d338383610b0e565b6001600160a01b0383163b1561094557604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061086390889088908790879060040161138e565b6020604051808303816000875af192505050801561089e575060408051601f3d908101601f1916820190925261089b918101906113cb565b60015b610907573d8080156108cc576040519150601f19603f3d011682016040523d82523d6000602084013e6108d1565b606091505b5080516000036108ff57604051633250574960e11b81526001600160a01b0385166004820152602401610437565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461094357604051633250574960e11b81526001600160a01b0385166004820152602401610437565b505b5050505050565b61040d828260405180602001604052806000815250610bad565b606060088054610327906111db565b6060600061098283610bc5565b600101905060008167ffffffffffffffff8111156109a2576109a261101b565b6040519080825280601f01601f1916602001820160405280156109cc576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846109d657509392505050565b6104bc8383836001610c9d565b6000828152600260205260408120546001600160a01b0390811690831615610a4257610a42818486610da3565b6001600160a01b03811615610a8057610a5f600085600080610c9d565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610aaf576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6001600160a01b038216610b4057604051630b61174360e31b81526001600160a01b0383166004820152602401610437565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610bb78383610e07565b6104bc336000858585610821565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c045772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c30576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c4e57662386f26fc10000830492506010015b6305f5e1008310610c66576305f5e100830492506008015b6127108310610c7a57612710830492506004015b60648310610c8c576064830492506002015b600a83106103125760010192915050565b8080610cb157506001600160a01b03821615155b15610d73576000610cc1846106fc565b90506001600160a01b03831615801590610ced5750826001600160a01b0316816001600160a01b031614155b8015610d005750610cfe8184610690565b155b15610d295760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610437565b8115610d715783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610dae838383610e6c565b6104bc576001600160a01b038316610ddc57604051637e27328960e01b815260048101829052602401610437565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610437565b6001600160a01b038216610e3157604051633250574960e11b815260006004820152602401610437565b6000610e3f83836000610740565b90506001600160a01b038116156104bc576040516339e3563760e11b815260006004820152602401610437565b60006001600160a01b0383161580159061078f5750826001600160a01b0316846001600160a01b03161480610ea65750610ea68484610690565b8061078f5750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b0319811681146106f957600080fd5b600060208284031215610ef757600080fd5b813561068981610ecf565b60005b83811015610f1d578181015183820152602001610f05565b50506000910152565b60008151808452610f3e816020860160208601610f02565b601f01601f19169290920160200192915050565b6020815260006106896020830184610f26565b600060208284031215610f7757600080fd5b5035919050565b80356001600160a01b0381168114610f9557600080fd5b919050565b60008060408385031215610fad57600080fd5b610fb683610f7e565b946020939093013593505050565b600080600060608486031215610fd957600080fd5b610fe284610f7e565b9250610ff060208501610f7e565b9150604084013590509250925092565b60006020828403121561101257600080fd5b61068982610f7e565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561104c5761104c61101b565b604051601f8501601f19908116603f011681019082821181831017156110745761107461101b565b8160405280935085815286868601111561108d57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156110b957600080fd5b813567ffffffffffffffff8111156110d057600080fd5b8201601f810184136110e157600080fd5b61078f84823560208401611031565b6000806040838503121561110357600080fd5b61110c83610f7e565b91506020830135801515811461112157600080fd5b809150509250929050565b6000806000806080858703121561114257600080fd5b61114b85610f7e565b935061115960208601610f7e565b925060408501359150606085013567ffffffffffffffff81111561117c57600080fd5b8501601f8101871361118d57600080fd5b61119c87823560208401611031565b91505092959194509250565b600080604083850312156111bb57600080fd5b6111c483610f7e565b91506111d260208401610f7e565b90509250929050565b600181811c908216806111ef57607f821691505b60208210810361120f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104bc576000816000526020600020601f850160051c8101602086101561123e5750805b601f850160051c820191505b818110156109435782815560010161124a565b815167ffffffffffffffff8111156112775761127761101b565b61128b8161128584546111db565b84611215565b602080601f8311600181146112c057600084156112a85750858301515b600019600386901b1c1916600185901b178555610943565b600085815260208120601f198616915b828110156112ef578886015182559484019460019091019084016112d0565b508582101561130d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b818103818111156103125761031261131d565b6000600182016113585761135861131d565b5060010190565b60008351611371818460208801610f02565b835190830190611385818360208801610f02565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906113c190830184610f26565b9695505050505050565b6000602082840312156113dd57600080fd5b815161068981610ecf56fea264697066735822122022ecd5964fd535b5e8332b5d00b2fbfd5ff12dfb6e46702c4fae1b4303448ddd64736f6c63430008180033";

type InstitutionalNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InstitutionalNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InstitutionalNFT__factory extends ContractFactory {
  constructor(...args: InstitutionalNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    baseURI_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      baseURI_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    baseURI_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, baseURI_, overrides || {}) as Promise<
      InstitutionalNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InstitutionalNFT__factory {
    return super.connect(runner) as InstitutionalNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InstitutionalNFTInterface {
    return new Interface(_abi) as InstitutionalNFTInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InstitutionalNFT {
    return new Contract(address, _abi, runner) as unknown as InstitutionalNFT;
  }
}
