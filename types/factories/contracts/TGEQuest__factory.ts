/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { TGEQuest, TGEQuestInterface } from "../../contracts/TGEQuest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "questId",
        type: "uint256",
      },
    ],
    name: "completeQuest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasCompleted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "questProgress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600c81526020016b2722a927902337bab73232b960a11b8152506040518060400160405280600b81526020016a2722a927a327aaa72222a960a91b81525081600090816200006c91906200013d565b5060016200007b82826200013d565b5050600680546001600160a01b031916331790555062000209565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000c157607f821691505b602082108103620000e257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000138576000816000526020600020601f850160051c81016020861015620001135750805b601f850160051c820191505b8181101562000134578281556001016200011f565b5050505b505050565b81516001600160401b0381111562000159576200015962000096565b62000171816200016a8454620000ac565b84620000e8565b602080601f831160018114620001a95760008415620001905750858301515b600019600386901b1c1916600185901b17855562000134565b600085815260208120601f198616915b82811015620001da57888601518255948401946001909101908401620001b9565b5085821015620001f95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61109980620002196000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063b88d4fde11610071578063b88d4fde14610238578063c87b56dd1461024b578063e985e9c51461025e578063eba53f7d14610271578063f310f4f01461028457600080fd5b806370a08231146101e95780638da5cb5b1461020a57806395d89b411461021d578063a22cb4651461022557600080fd5b806323b872dd116100de57806323b872dd1461018d57806331f29250146101a057806342842e0e146101c35780636352211e146101d657600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004610d09565b6102a4565b60405190151581526020015b60405180910390f35b6101406102f6565b60405161012f9190610d76565b61016061015b366004610d89565b610388565b6040516001600160a01b03909116815260200161012f565b61018b610186366004610dbe565b6103b1565b005b61018b61019b366004610de8565b6103c0565b6101236101ae366004610e24565b60076020526000908152604090205460ff1681565b61018b6101d1366004610de8565b610450565b6101606101e4366004610d89565b610470565b6101fc6101f7366004610e24565b61047b565b60405190815260200161012f565b600654610160906001600160a01b031681565b6101406104c3565b61018b610233366004610e3f565b6104d2565b61018b610246366004610e91565b6104dd565b610140610259366004610d89565b6104f5565b61012361026c366004610f6d565b61056a565b61018b61027f366004610dbe565b610598565b6101fc610292366004610e24565b60086020526000908152604090205481565b60006001600160e01b031982166380ac58cd60e01b14806102d557506001600160e01b03198216635b5e139f60e01b145b806102f057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461030590610fa0565b80601f016020809104026020016040519081016040528092919081815260200182805461033190610fa0565b801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b5050505050905090565b600061039382610647565b506000828152600460205260409020546001600160a01b03166102f0565b6103bc828233610680565b5050565b6001600160a01b0382166103ef57604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103fc83833361068d565b9050836001600160a01b0316816001600160a01b03161461044a576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103e6565b50505050565b61046b838383604051806020016040528060008152506104dd565b505050565b60006102f082610647565b60006001600160a01b0382166104a7576040516322718ad960e21b8152600060048201526024016103e6565b506001600160a01b031660009081526003602052604090205490565b60606001805461030590610fa0565b6103bc338383610786565b6104e88484846103c0565b61044a3385858585610825565b606061050082610647565b50600061051860408051602081019091526000815290565b905060008151116105385760405180602001604052806000815250610563565b8061054284610950565b604051602001610553929190610fda565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6006546001600160a01b031633146105e35760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016103e6565b6001600160a01b038216600090815260086020526040902080546001831b1790819055601f036103bc5761062082836001600160a01b03166109e3565b6001600160a01b0382166000908152600760205260409020805460ff191660011790555050565b6000818152600260205260408120546001600160a01b0316806102f057604051637e27328960e01b8152600481018490526024016103e6565b61046b8383836001610a48565b6000828152600260205260408120546001600160a01b03908116908316156106ba576106ba818486610b4e565b6001600160a01b038116156106f8576106d7600085600080610a48565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610727576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6001600160a01b0382166107b857604051630b61174360e31b81526001600160a01b03831660048201526024016103e6565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561094957604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610867908890889087908790600401611009565b6020604051808303816000875af19250505080156108a2575060408051601f3d908101601f1916820190925261089f91810190611046565b60015b61090b573d8080156108d0576040519150601f19603f3d011682016040523d82523d6000602084013e6108d5565b606091505b50805160000361090357604051633250574960e11b81526001600160a01b03851660048201526024016103e6565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461094757604051633250574960e11b81526001600160a01b03851660048201526024016103e6565b505b5050505050565b6060600061095d83610bb2565b600101905060008167ffffffffffffffff81111561097d5761097d610e7b565b6040519080825280601f01601f1916602001820160405280156109a7576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846109b157509392505050565b6001600160a01b038216610a0d57604051633250574960e11b8152600060048201526024016103e6565b6000610a1b8383600061068d565b90506001600160a01b0381161561046b576040516339e3563760e11b8152600060048201526024016103e6565b8080610a5c57506001600160a01b03821615155b15610b1e576000610a6c84610647565b90506001600160a01b03831615801590610a985750826001600160a01b0316816001600160a01b031614155b8015610aab5750610aa9818461056a565b155b15610ad45760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103e6565b8115610b1c5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610b59838383610c8a565b61046b576001600160a01b038316610b8757604051637e27328960e01b8152600481018290526024016103e6565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103e6565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610bf15772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c1d576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c3b57662386f26fc10000830492506010015b6305f5e1008310610c53576305f5e100830492506008015b6127108310610c6757612710830492506004015b60648310610c79576064830492506002015b600a83106102f05760010192915050565b60006001600160a01b03831615801590610ce85750826001600160a01b0316846001600160a01b03161480610cc45750610cc4848461056a565b80610ce857506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b031981168114610d0657600080fd5b50565b600060208284031215610d1b57600080fd5b813561056381610cf0565b60005b83811015610d41578181015183820152602001610d29565b50506000910152565b60008151808452610d62816020860160208601610d26565b601f01601f19169290920160200192915050565b6020815260006105636020830184610d4a565b600060208284031215610d9b57600080fd5b5035919050565b80356001600160a01b0381168114610db957600080fd5b919050565b60008060408385031215610dd157600080fd5b610dda83610da2565b946020939093013593505050565b600080600060608486031215610dfd57600080fd5b610e0684610da2565b9250610e1460208501610da2565b9150604084013590509250925092565b600060208284031215610e3657600080fd5b61056382610da2565b60008060408385031215610e5257600080fd5b610e5b83610da2565b915060208301358015158114610e7057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610ea757600080fd5b610eb085610da2565b9350610ebe60208601610da2565b925060408501359150606085013567ffffffffffffffff80821115610ee257600080fd5b818701915087601f830112610ef657600080fd5b813581811115610f0857610f08610e7b565b604051601f8201601f19908116603f01168101908382118183101715610f3057610f30610e7b565b816040528281528a6020848701011115610f4957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610f8057600080fd5b610f8983610da2565b9150610f9760208401610da2565b90509250929050565b600181811c90821680610fb457607f821691505b602082108103610fd457634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610fec818460208801610d26565b835190830190611000818360208801610d26565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061103c90830184610d4a565b9695505050505050565b60006020828403121561105857600080fd5b815161056381610cf056fea2646970667358221220fe993f0db29f54ef73ec26fd25b497bce7c906dcffa82ff9214a0f624a86de3d64736f6c63430008180033";

type TGEQuestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TGEQuestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TGEQuest__factory extends ContractFactory {
  constructor(...args: TGEQuestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TGEQuest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TGEQuest__factory {
    return super.connect(runner) as TGEQuest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TGEQuestInterface {
    return new Interface(_abi) as TGEQuestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TGEQuest {
    return new Contract(address, _abi, runner) as unknown as TGEQuest;
  }
}
