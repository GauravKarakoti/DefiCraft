/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ResourceTracker,
  ResourceTrackerInterface,
} from "../../contracts/ResourceTracker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ResourceAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "ResourceRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "ResourceUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "addMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "addResourceType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "getResourceAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getResources",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ResourceTracker.Resource[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
    ],
    name: "removeMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516114e13803806114e183398101604081905261002f91610197565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006781610147565b5060016002604051610083906315d3d3d160e21b815260040190565b90815260408051918290036020018220805493151560ff199485161790556453544f4e4560d81b8252600260058084018290528251938490036025908101852080548716600190811790915564135155105360da1b865291850183905283519485900301842080548616821790556610d49654d5105360ca1b8452600780850183905283519485900360279081018620805488168417905566455353454e434560c81b865290850192909252915192839003019091208054909216179055506101c7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156101a957600080fd5b81516001600160a01b03811681146101c057600080fd5b9392505050565b61130b806101d66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a383ecec11610071578063a383ecec14610111578063b5736bd614610124578063c8c4f94114610145578063e357157914610158578063f2fde38b14610178578063f46eccc41461018b57600080fd5b80631ca7d1b1146100ae5780633092afd5146100c3578063715018a6146100d65780638da5cb5b146100de578063983b2d56146100fe575b600080fd5b6100c16100bc366004610d28565b6101be565b005b6100c16100d1366004610d7f565b61043c565b6100c1610465565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100c161010c366004610d7f565b610479565b6100c161011f366004610da1565b6104a5565b610137610132366004610dde565b6104e2565b6040519081526020016100f5565b6100c1610153366004610d28565b610609565b61016b610166366004610d7f565b610935565b6040516100f59190610e7c565b6100c1610186366004610d7f565b610a46565b6101ae610199366004610d7f565b60036020526000908152604090205460ff1681565b60405190151581526020016100f5565b3360009081526003602052604090205460ff166101f65760405162461bcd60e51b81526004016101ed90610ef4565b60405180910390fd5b816002816040516102079190610f39565b9081526040519081900360200190205460ff166102365760405162461bcd60e51b81526004016101ed90610f55565b60005b6001600160a01b03851660009081526001602052604090205481101561039857838051906020012060016000876001600160a01b03166001600160a01b03168152602001908152602001600020828154811061029757610297610f96565b90600052602060002090600202016000016040516102b59190610fe6565b604051809103902003610390576001600160a01b03851660009081526001602052604090208054849190839081106102ef576102ef610f96565b9060005260206000209060020201600101600082825461030f9190611072565b90915550506001600160a01b038516600081815260016020526040902080547f171223dba629be6765c34cd1ae98cc00aabb9d8011ea0179d8633f33be54a0ee9187918590811061036257610362610f96565b90600052602060002090600202016001015460405161038292919061108b565b60405180910390a250610436565b600101610239565b506001600160a01b03841660009081526001602081815260408084208151808301909252878252818301879052805493840181558452922082516002909202019081906103e590826110fe565b50602082015181600101555050836001600160a01b03167fb6d3ad13ffadf56392b7ddd3db81ff2c535097e2e279d63f085a10c1e9f5a579848460405161042d92919061108b565b60405180910390a25b50505050565b610444610a84565b6001600160a01b03166000908152600360205260409020805460ff19169055565b61046d610a84565b6104776000610ab1565b565b610481610a84565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b6104ad610a84565b60016002826040516104bf9190610f39565b908152604051908190036020019020805491151560ff1990921691909117905550565b6000816002816040516104f59190610f39565b9081526040519081900360200190205460ff166105245760405162461bcd60e51b81526004016101ed90610f55565b60005b6001600160a01b0385166000908152600160205260409020548110156105fc57838051906020012060016000876001600160a01b03166001600160a01b03168152602001908152602001600020828154811061058557610585610f96565b90600052602060002090600202016000016040516105a39190610fe6565b6040518091039020036105f4576001600160a01b03851660009081526001602052604090208054829081106105da576105da610f96565b906000526020600020906002020160010154925050610602565b600101610527565b50600091505b5092915050565b3360009081526003602052604090205460ff166106385760405162461bcd60e51b81526004016101ed90610ef4565b816002816040516106499190610f39565b9081526040519081900360200190205460ff166106785760405162461bcd60e51b81526004016101ed90610f55565b60005b6001600160a01b0385166000908152600160205260409020548110156108e057838051906020012060016000876001600160a01b03166001600160a01b0316815260200190815260200160002082815481106106d9576106d9610f96565b90600052602060002090600202016000016040516106f79190610fe6565b6040518091039020036108d8576001600160a01b038516600090815260016020526040902080548491908390811061073157610731610f96565b906000526020600020906002020160010154101561079f5760405162461bcd60e51b815260206004820152602560248201527f5265736f75726365547261636b65723a20496e73756666696369656e742062616044820152646c616e636560d81b60648201526084016101ed565b6001600160a01b03851660009081526001602052604090208054849190839081106107cc576107cc610f96565b906000526020600020906002020160010160008282546107ec91906111be565b90915550506001600160a01b038516600090815260016020526040902080548290811061081b5761081b610f96565b9060005260206000209060020201600101546000036108845761083e8582610b01565b846001600160a01b03167f8eae4fdc9ad7d14b2455c253a772c1d03e8c2498399a2490aaf141e0a90694588560405161087791906111d1565b60405180910390a26108d2565b6001600160a01b038516600081815260016020526040902080547f171223dba629be6765c34cd1ae98cc00aabb9d8011ea0179d8633f33be54a0ee9187918590811061036257610362610f96565b50610436565b60010161067b565b5060405162461bcd60e51b815260206004820152602360248201527f5265736f75726365547261636b65723a205265736f75726365206e6f7420666f6044820152621d5b9960ea1b60648201526084016101ed565b6001600160a01b0381166000908152600160209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610a3b57838290600052602060002090600202016040518060400160405290816000820180546109a090610fac565b80601f01602080910402602001604051908101604052809291908181526020018280546109cc90610fac565b8015610a195780601f106109ee57610100808354040283529160200191610a19565b820191906000526020600020905b8154815290600101906020018083116109fc57829003601f168201915b505050505081526020016001820154815250508152602001906001019061096d565b505050509050919050565b610a4e610a84565b6001600160a01b038116610a7857604051631e4fbdf760e01b8152600060048201526024016101ed565b610a8181610ab1565b50565b6000546001600160a01b031633146104775760405163118cdaa760e01b81523360048201526024016101ed565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166000908152600160208190526040822054610b2691906111be565b9050808214610bc3576001600160a01b0383166000908152600160205260409020805482908110610b5957610b59610f96565b906000526020600020906002020160016000856001600160a01b03166001600160a01b031681526020019081526020016000208381548110610b9d57610b9d610f96565b6000918252602090912060029091020180610bb883826111e4565b506001918201549101555b6001600160a01b0383166000908152600160205260409020805480610bea57610bea6112bf565b60008281526020812060001990920191600283020190610c0a8282610c1b565b600182016000905550509055505050565b508054610c2790610fac565b6000825580601f10610c37575050565b601f016020900490600052602060002090810190610a8191905b80821115610c655760008155600101610c51565b5090565b80356001600160a01b0381168114610c8057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610cac57600080fd5b813567ffffffffffffffff80821115610cc757610cc7610c85565b604051601f8301601f19908116603f01168101908282118183101715610cef57610cef610c85565b81604052838152866020858801011115610d0857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610d3d57600080fd5b610d4684610c69565b9250602084013567ffffffffffffffff811115610d6257600080fd5b610d6e86828701610c9b565b925050604084013590509250925092565b600060208284031215610d9157600080fd5b610d9a82610c69565b9392505050565b600060208284031215610db357600080fd5b813567ffffffffffffffff811115610dca57600080fd5b610dd684828501610c9b565b949350505050565b60008060408385031215610df157600080fd5b610dfa83610c69565b9150602083013567ffffffffffffffff811115610e1657600080fd5b610e2285828601610c9b565b9150509250929050565b60005b83811015610e47578181015183820152602001610e2f565b50506000910152565b60008151808452610e68816020860160208601610e2c565b601f01601f19169290920160200192915050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b83811015610ee657888303603f1901855281518051878552610ec988860182610e50565b918901519489019490945294870194925090860190600101610ea5565b509098975050505050505050565b60208082526025908201527f5265736f75726365547261636b65723a2043616c6c6572206973206e6f74206d60408201526434b73a32b960d91b606082015260800190565b60008251610f4b818460208701610e2c565b9190910192915050565b60208082526021908201527f5265736f75726365547261636b65723a20496e76616c6964207265736f7572636040820152606560f81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610fc057607f821691505b602082108103610fe057634e487b7160e01b600052602260045260246000fd5b50919050565b6000808354610ff481610fac565b6001828116801561100c576001811461102157611050565b60ff1984168752821515830287019450611050565b8760005260208060002060005b858110156110475781548a82015290840190820161102e565b50505082870194505b50929695505050505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156110855761108561105c565b92915050565b60408152600061109e6040830185610e50565b90508260208301529392505050565b601f8211156110f9576000816000526020600020601f850160051c810160208610156110d65750805b601f850160051c820191505b818110156110f5578281556001016110e2565b5050505b505050565b815167ffffffffffffffff81111561111857611118610c85565b61112c816111268454610fac565b846110ad565b602080601f83116001811461116157600084156111495750858301515b600019600386901b1c1916600185901b1785556110f5565b600085815260208120601f198616915b8281101561119057888601518255948401946001909101908401611171565b50858210156111ae5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156110855761108561105c565b602081526000610d9a6020830184610e50565b8181036111ef575050565b6111f98254610fac565b67ffffffffffffffff81111561121157611211610c85565b61121f816111268454610fac565b6000601f821160018114611253576000831561123b5750848201545b600019600385901b1c1916600184901b1784556112b8565b600085815260209020601f19841690600086815260209020845b8381101561128d578286015482556001958601959091019060200161126d565b50858310156112ab5781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220115d750cbe9c45984b92d9b57b32be2c730d6b388fd8e3401d98e3258044eceb64736f6c63430008180033";

type ResourceTrackerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResourceTrackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ResourceTracker__factory extends ContractFactory {
  constructor(...args: ResourceTrackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      ResourceTracker & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ResourceTracker__factory {
    return super.connect(runner) as ResourceTracker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResourceTrackerInterface {
    return new Interface(_abi) as ResourceTrackerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ResourceTracker {
    return new Contract(address, _abi, runner) as unknown as ResourceTracker;
  }
}
