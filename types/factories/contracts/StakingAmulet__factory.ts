/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  StakingAmulet,
  StakingAmuletInterface,
} from "../../contracts/StakingAmulet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lastClaimTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintWithStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001729380380620017298339810160408190526200003491620000c4565b6040518060400160405280600e81526020016d14dd185ada5b99c8105b5d5b195d60921b8152506040518060400160405280600681526020016510535553115560d21b81525081600090816200008b91906200019d565b5060016200009a82826200019d565b5050600780546001600160a01b0319166001600160a01b0393909316929092179091555062000269565b600060208284031215620000d757600080fd5b81516001600160a01b0381168114620000ef57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200012157607f821691505b6020821081036200014257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000198576000816000526020600020601f850160051c81016020861015620001735750805b601f850160051c820191505b8181101562000194578281556001016200017f565b5050505b505050565b81516001600160401b03811115620001b957620001b9620000f6565b620001d181620001ca84546200010c565b8462000148565b602080601f831160018114620002095760008415620001f05750858301515b600019600386901b1c1916600185901b17855562000194565b600085815260208120601f198616915b828110156200023a5788860151825594840194600190910190840162000219565b5085821015620002595787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6114b080620002796000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a22cb4651161007c578063a22cb4651461029d578063ae169a50146102b0578063b88d4fde146102c3578063c87b56dd146102d6578063e985e9c5146102e9578063feae2c98146102fc57600080fd5b806370a082311461024657806372f702f31461025957806375794a3c1461026c578063877dab7e1461027557806395d89b411461029557600080fd5b806323b872dd116100ff57806323b872dd146101da5780632e17de78146101ed57806342842e0e146102005780635a459ed4146102135780636352211e1461023357600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806313ed0846146101b9575b600080fd5b61014f61014a36600461105d565b61030f565b60405190151581526020015b60405180910390f35b61016c610361565b60405161015b91906110ca565b61018c6101873660046110dd565b6103f3565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611112565b61041c565b005b6101cc6101c736600461113c565b61042b565b60405190815260200161015b565b6101b76101e836600461115e565b610467565b6101b76101fb3660046110dd565b6104f7565b6101b761020e36600461115e565b61062e565b6101cc6102213660046110dd565b60086020526000908152604090205481565b61018c6102413660046110dd565b61064e565b6101cc61025436600461119a565b610659565b60075461018c906001600160a01b031681565b6101cc60065481565b6101cc6102833660046110dd565b60096020526000908152604090205481565b61016c6106a1565b6101b76102ab3660046111c3565b6106b0565b6101b76102be3660046110dd565b6106bb565b6101b76102d1366004611210565b610783565b61016c6102e43660046110dd565b61079b565b61014f6102f73660046112ec565b61080f565b6101b761030a3660046110dd565b61083d565b60006001600160e01b031982166380ac58cd60e01b148061034057506001600160e01b03198216635b5e139f60e01b145b8061035b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103709061131f565b80601f016020809104026020016040519081016040528092919081815260200182805461039c9061131f565b80156103e95780601f106103be576101008083540402835291602001916103e9565b820191906000526020600020905b8154815290600101906020018083116103cc57829003601f168201915b5050505050905090565b60006103fe8261092e565b506000828152600460205260409020546001600160a01b031661035b565b610427828233610967565b5050565b60008281526008602052604081205463bbf81e009061044b90849061136f565b61045690600a61136f565b6104609190611386565b9392505050565b6001600160a01b03821661049657604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006104a3838333610974565b9050836001600160a01b0316816001600160a01b0316146104f1576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161048d565b50505050565b336105018261064e565b6001600160a01b0316146105435760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b604482015260640161048d565b6000818152600860205260409081902054600754915163a9059cbb60e01b81523360048201526024810182905290916001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c891906113a8565b506105d282610a6d565b60008281526008602090815260408083208390556009825280832092909255815183815290810184905233917f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e91015b60405180910390a25050565b61064983838360405180602001604052806000815250610783565b505050565b600061035b8261092e565b60006001600160a01b038216610685576040516322718ad960e21b81526000600482015260240161048d565b506001600160a01b031660009081526003602052604090205490565b6060600180546103709061131f565b610427338383610aa8565b336106c58261064e565b6001600160a01b0316146107075760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b604482015260640161048d565b60008181526009602052604081205461072090426113c5565b9050600061072e838361042b565b600084815260096020908152604091829020429055815183815290810186905291925033917ff01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743910160405180910390a2505050565b61078e848484610467565b6104f13385858585610b47565b60606107a68261092e565b5060006107be60408051602081019091526000815290565b905060008151116107de5760405180602001604052806000815250610460565b806107e884610c72565b6040516020016107f99291906113d8565b6040516020818303038152906040529392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6007546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610894573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b891906113a8565b5060068054600091826108ca83611407565b9190505590506108da3382610d05565b60008181526008602090815260408083208590556009825291829020429055815184815290810183905233917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee909101610622565b6000818152600260205260408120546001600160a01b03168061035b57604051637e27328960e01b81526004810184905260240161048d565b6106498383836001610d1f565b6000828152600260205260408120546001600160a01b03908116908316156109a1576109a1818486610e25565b6001600160a01b038116156109df576109be600085600080610d1f565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610a0e576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000610a7c6000836000610974565b90506001600160a01b03811661042757604051637e27328960e01b81526004810183905260240161048d565b6001600160a01b038216610ada57604051630b61174360e31b81526001600160a01b038316600482015260240161048d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610c6b57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610b89908890889087908790600401611420565b6020604051808303816000875af1925050508015610bc4575060408051601f3d908101601f19168201909252610bc19181019061145d565b60015b610c2d573d808015610bf2576040519150601f19603f3d011682016040523d82523d6000602084013e610bf7565b606091505b508051600003610c2557604051633250574960e11b81526001600160a01b038516600482015260240161048d565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610c6957604051633250574960e11b81526001600160a01b038516600482015260240161048d565b505b5050505050565b60606000610c7f83610e89565b600101905060008167ffffffffffffffff811115610c9f57610c9f6111fa565b6040519080825280601f01601f191660200182016040528015610cc9576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610cd357509392505050565b610427828260405180602001604052806000815250610f61565b8080610d3357506001600160a01b03821615155b15610df5576000610d438461092e565b90506001600160a01b03831615801590610d6f5750826001600160a01b0316816001600160a01b031614155b8015610d825750610d80818461080f565b155b15610dab5760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161048d565b8115610df35783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610e30838383610f79565b610649576001600160a01b038316610e5e57604051637e27328960e01b81526004810182905260240161048d565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161048d565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610ec85772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610ef4576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f1257662386f26fc10000830492506010015b6305f5e1008310610f2a576305f5e100830492506008015b6127108310610f3e57612710830492506004015b60648310610f50576064830492506002015b600a831061035b5760010192915050565b610f6b8383610fdf565b610649336000858585610b47565b60006001600160a01b03831615801590610fd75750826001600160a01b0316846001600160a01b03161480610fb35750610fb3848461080f565b80610fd757506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b03821661100957604051633250574960e11b81526000600482015260240161048d565b600061101783836000610974565b90506001600160a01b03811615610649576040516339e3563760e11b81526000600482015260240161048d565b6001600160e01b03198116811461105a57600080fd5b50565b60006020828403121561106f57600080fd5b813561046081611044565b60005b8381101561109557818101518382015260200161107d565b50506000910152565b600081518084526110b681602086016020860161107a565b601f01601f19169290920160200192915050565b602081526000610460602083018461109e565b6000602082840312156110ef57600080fd5b5035919050565b80356001600160a01b038116811461110d57600080fd5b919050565b6000806040838503121561112557600080fd5b61112e836110f6565b946020939093013593505050565b6000806040838503121561114f57600080fd5b50508035926020909101359150565b60008060006060848603121561117357600080fd5b61117c846110f6565b925061118a602085016110f6565b9150604084013590509250925092565b6000602082840312156111ac57600080fd5b610460826110f6565b801515811461105a57600080fd5b600080604083850312156111d657600080fd5b6111df836110f6565b915060208301356111ef816111b5565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561122657600080fd5b61122f856110f6565b935061123d602086016110f6565b925060408501359150606085013567ffffffffffffffff8082111561126157600080fd5b818701915087601f83011261127557600080fd5b813581811115611287576112876111fa565b604051601f8201601f19908116603f011681019083821181831017156112af576112af6111fa565b816040528281528a60208487010111156112c857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156112ff57600080fd5b611308836110f6565b9150611316602084016110f6565b90509250929050565b600181811c9082168061133357607f821691505b60208210810361135357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761035b5761035b611359565b6000826113a357634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156113ba57600080fd5b8151610460816111b5565b8181038181111561035b5761035b611359565b600083516113ea81846020880161107a565b8351908301906113fe81836020880161107a565b01949350505050565b60006001820161141957611419611359565b5060010190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906114539083018461109e565b9695505050505050565b60006020828403121561146f57600080fd5b81516104608161104456fea2646970667358221220fa3d042c9a164ef672942e5286fcf71dd0090182defd28bd47142e30e034fe7c64736f6c63430008180033";

type StakingAmuletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingAmuletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingAmulet__factory extends ContractFactory {
  constructor(...args: StakingAmuletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stakingToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_stakingToken, overrides || {});
  }
  override deploy(
    _stakingToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_stakingToken, overrides || {}) as Promise<
      StakingAmulet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StakingAmulet__factory {
    return super.connect(runner) as StakingAmulet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingAmuletInterface {
    return new Interface(_abi) as StakingAmuletInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StakingAmulet {
    return new Contract(address, _abi, runner) as unknown as StakingAmulet;
  }
}
